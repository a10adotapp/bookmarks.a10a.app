/// ブックマーク
///
/// @namespace ブックマーク
model Bookmark {
  id Int @id @default(autoincrement())

  userId Int @map("user_id")

  /// URL
  url String @map("url") @db.Text

  /// ページタイトル
  title String @map("title")

  /// ページサムネイル
  imageUrl String? @map("image_url") @db.Text

  /// クリックカウント
  clickCount Int @default(0) @map("click_count")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

/// Googleユーザー
///
/// - https://developers.google.com/identity/openid-connect/openid-connect?hl=ja#an-id-tokens-payload
///
/// @namespace 認証
model GoogleUser {
  userId Int @map("user_id")

  /// ユーザーの識別子。
  /// すべての Google アカウントの中で一意であり、再利用されることはありません。
  /// Google アカウントは、異なる時点で複数のメールアドレスを持つことができますが、sub 値は変更されません。
  id String @unique

  /// ユーザーのメールアドレス。
  /// このクレームの値はこのアカウントに対して一意ではなく、時間の経過とともに変化する可能性があるため、ユーザー レコードにリンクするメインの識別子としてこの値を使用しないでください。
  email String

  /// 表示可能な形式でのユーザーの氏名。
  name String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("google_users")
}

/// Passkey
///
/// - https://simplewebauthn.dev/docs/packages/server#additional-data-structures
///
/// @namespace 認証
model Passkey {
  userId Int @map("user_id")

  /// The credential's credential ID for the public key
  id String @map("id") @db.Text

  /// The credential's public key
  publicKey Bytes @map("public_key") @db.Blob

  /// The number of times the authenticator reported it has been used.  
  /// **Should be kept in a DB for later reference to help prevent replay attacks!**
  counter BigInt @map("counter")

  /// Whether this is a single-device or multi-device credential.  
  /// **Should be kept in a DB for later reference!**
  deviceType String @map("device_type")

  /// Whether or not the multi-device credential has been backed up.  
  /// Always `false` for single-device credentials.   
  /// **Should be kept in a DB for later reference!**
  backedUp Boolean @map("backed_up")

  /// The transports of the credential record.  
  /// `'ble' | 'cable' | 'hybrid' | 'internal' | 'nfc' | 'smart-card' | 'usb'`
  transports String @map("transports")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@id([id(length: 255)])
  @@map("passkeys")
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/client"
  previewFeatures = ["prismaSchemaFolder"]
}

generator markdown {
  provider = "prisma-markdown"
  output   = "../../SCHEMA.md"
  title    = "Schema"
}

/// ユーザー
///
/// @namespace 認証
model User {
  id Int @id @default(autoincrement()) @map("id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  bookmarks   Bookmark[]
  googleUsers GoogleUser[]
  passkeys    Passkey[]

  @@map("users")
}
